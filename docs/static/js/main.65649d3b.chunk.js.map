{"version":3,"sources":["Components/ToDoListItem.js","Components/Input.js","Components/Counter.js","Components/Seperator.js","Components/ToggleButton.js","Components/ProgressBar.js","Components/TextArea.js","Components/Home.js","Components/Config.js","Components/App.js","Components/GlobalStyle.js","serviceWorker.js","index.js"],"names":["ListItem","styled","li","withConfig","displayName","componentId","DeleteButton","button","Text","span","ToDoListItem","_this$props","this","props","text","click","isDone","deleteEl","react_default","a","createElement","onClick","className","Component","InputEl","input","Input","handleKeyUp","event","target","key","_this","onEnter","value","focus","type","placeholder","onKeyUp","HeadlineStyle","h2","Counter","num","Wrapper","section","Line","div","width","Seperator","Seperator_Text","ToggleButtonEl","ToggleButton","state","isDefault","lastPropsIsDefault","handleToggle","setState","defaultText","alternativeText","height","percentage","Textarea","textarea","TextArea","console","clear","Layout","StyleEl","Container","main","ListContainer","Headline","header","Home","todos","load","addToDo","done","id","uid","concat","Object","toConsumableArray","toggleDone","index","findIndex","todo","newArray","slice","objectSpread","deleteListItem","counterToDo","filter","item","length","localStorage","setItem","JSON","stringify","parse","getItem","err","_this2","map","ToDoListItem_ToDoListItem","_this3","Fragment","Seperator_Seperator","t","save","ProgressBar","determineProgress","Counter_Counter","Input_Input","renderOpenTodos","showDoneTodos","renderDoneTodos","TextArea_TextArea","Config","onToggle","ToggleButton_ToggleButton","Grid","App","toggleShowDonetodos","BrowserRouter","Route","exact","path","render","Components_Home","Config_Config","NavLink","activeClassName","to","createGlobalStyle","_templateObject","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","catch","error","ReactDOM","App_App","GlobalStyle","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.65649d3b.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst ListItem = styled.li`\n  display: flex;\n  align-items: flex-end;\n  font-family: 'Roboto';\n  font-size: 14px;\n  width: 290px;\n  background: #ffcc00;\n  margin-bottom: 10px;\n  padding: 5px;\n  border-radius: 5px;\n\n  &:nth-child(even) {\n    background: #ebe1d3;\n  }\n`\n\nconst DeleteButton = styled.button`\n  background: #006194;\n  color: white;\n  margin-left: auto;\n  border: 0;\n  border-radius: 5px;\n\n  &:hover {\n    background: #ececec;\n    color: #006194;\n  }\n`\n\nconst Text = styled.span`\n  &.done {\n    color: #0080bc91;\n    text-decoration: line-through;\n  }\n`\n\nexport default class ToDoListItem extends Component {\n  render() {\n    const { text, click, isDone, deleteEl } = this.props\n\n    return (\n      <ListItem>\n        <Text onClick={click} className={isDone ? 'done' : ''}>\n          {text}\n        </Text>\n        <DeleteButton onClick={deleteEl}>&times;</DeleteButton>\n      </ListItem>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst InputEl = styled.input`\n  &[type='text'] {\n    height: 20px;\n    width: 100%;\n    font-family: 'Roboto';\n    margin-bottom: 20px;\n  }\n`\n\nexport default class Input extends Component {\n  handleKeyUp = event => {\n    const input = event.target\n    if (event.key === 'Enter') {\n      this.props.onEnter(input.value)\n      input.value = ''\n      input.focus()\n    }\n  }\n\n  render() {\n    return (\n      <InputEl\n        type=\"text\"\n        placeholder=\"Add your To Do\"\n        onKeyUp={this.handleKeyUp}\n      />\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst HeadlineStyle = styled.h2`\n  font-family: 'Patrick Hand', cursive;\n  font-size: 35px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n`\n\nexport default class Counter extends Component {\n  render() {\n    return <HeadlineStyle>To Do done: {this.props.num}</HeadlineStyle>\n  }\n}\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.section`\n  @import url('https://fonts.googleapis.com/css?family=Patrick+Hand');\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n`\n\nconst Line = styled.div`\n  width: 100%;\n  margin: 0 10px 0;\n  border-bottom: ${props => props.width || 4}px solid black;\n`\nconst Text = styled.span`\n  white-space: nowrap;\n  font-family: 'Patrick Hand', cursive;\n`\n\nexport default class Seperator extends Component {\n  render() {\n    return (\n      <Wrapper>\n        <Line width={2} />\n        <Text>{this.props.text}</Text>\n        <Line width={2} />\n      </Wrapper>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst ToggleButtonEl = styled.button`\n  width: 100px;\n  height: 30px;\n  background: #006194;\n  border-radius: 10px;\n  color: white;\n\n  &.active {\n    background: #ffcc00;\n    color: #006194;\n  }\n`\n\nexport default class ToggleButton extends Component {\n  static getDerivedStateFromProps(props, state) {\n    const isTheSame = state.lastPropsIsDefault === props.isDefault\n\n    return isTheSame\n      ? null\n      : {\n          isDefault: props.isDefault,\n          lastPropsIsDefault: props.isDefault\n        }\n  }\n\n  state = {\n    isDefault: this.props.isDefault == null ? true : this.props.isDefault,\n    lastPropsIsDefault: this.props.isDefault\n  }\n\n  handleToggle = () => {\n    this.setState({\n      isDefault: !this.state.isDefault\n    })\n    this.props.onClick()\n  }\n\n  render() {\n    const { defaultText, alternativeText } = this.props\n    const { isDefault } = this.state\n    return (\n      <ToggleButtonEl\n        className={isDefault ? '' : 'active'}\n        onClick={this.handleToggle}\n      >\n        {isDefault ? defaultText : alternativeText}\n      </ToggleButtonEl>\n    )\n  }\n}\n","import styled from 'styled-components'\n\nexport default styled.div`\n  background: linear-gradient(45deg, #0d2843, #2980b9);\n  height: ${props => props.height || 8}px;\n  margin-bottom: 2px;\n\n  &::after {\n    content: '';\n    height: ${props => props.height || 8}px;\n    display: block;\n    width: ${props => props.percentage * 100}%;\n    background: #ffcc00;\n    transition: width 0.3s ease;\n  }\n`\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst Textarea = styled.textarea`\n  width: 100%;\n  height: 150px;\n  border: 0;\n`\n\nexport default class TextArea extends Component {\n  render() {\n    return (\n      <div>\n        <Textarea placeholder=\"Type a Text here\" />\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport uid from 'uid'\nimport ToDoListItem from './ToDoListItem'\nimport Input from './Input'\nimport Counter from './Counter'\nimport Seperator from './Seperator'\nimport ToggleButton from './ToggleButton'\nimport ProgressBar from './ProgressBar'\nimport TextArea from './TextArea'\nimport styled from 'styled-components'\n\nconsole.clear()\n\nconst Layout = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  height: 100%;\n  justify-content: center;\n  align-items: center;\n  background: linear-gradient(45deg, #0d2843 155px, #2980b9);\n`\n\nconst StyleEl = styled.div`\n  width: 436px;\n  position: relative;\n  height: 436px;\n  background: #ffcc00;\n  border-radius: 29% 71% 22% 78% / 57% 72% 28% 43%;\n`\n\nconst Container = styled.main`\n  background: white;\n  width: 300px;\n  min-height: 50vh;\n  margin: auto;\n  border-radius: 10px;\n  padding: 15px;\n  position: absolute;\n`\n\nconst ListContainer = styled.section`\n  background: #f9f9f9;\n  display: flex;\n  flex-direction: column;\n  margin: 0.5rem;\n`\n\nconst Headline = styled.header`\n  text-align: center;\n`\n\nclass Home extends Component {\n  state = {\n    todos: this.load()\n  }\n\n  addToDo = text => {\n    this.setState({\n      todos: [{ text, done: false, id: uid() }, ...this.state.todos]\n    })\n  }\n\n  toggleDone = id => {\n    const { todos } = this.state\n    const index = todos.findIndex(todo => todo.id === id)\n    const newArray = [\n      ...todos.slice(0, index),\n      { ...todos[index], done: !todos[index].done },\n      ...todos.slice(index + 1)\n    ]\n    this.setState({\n      todos: newArray\n    })\n  }\n\n  deleteListItem = id => {\n    const { todos } = this.state\n    const index = todos.findIndex(todo => todo.id === id)\n    const newArray = [...todos.slice(0, index), ...todos.slice(index + 1)]\n    this.setState({\n      todos: newArray\n    })\n  }\n\n  counterToDo = () => {\n    return this.state.todos.filter(item => item.done).length\n  }\n\n  save() {\n    localStorage.setItem('todo-app--todos', JSON.stringify(this.state.todos))\n  }\n\n  load() {\n    try {\n      return JSON.parse(localStorage.getItem('todo-app--todos')) || []\n    } catch (err) {\n      return []\n    }\n  }\n\n  renderOpenTodos() {\n    return this.state.todos\n      .filter(todo => !todo.done)\n      .map(todo => (\n        <ToDoListItem\n          key={todo.id}\n          text={todo.text}\n          isDone={todo.done}\n          click={() => this.toggleDone(todo.id)}\n          deleteEl={() => this.deleteListItem(todo.id)}\n        />\n      ))\n  }\n\n  renderDoneTodos() {\n    return (\n      <React.Fragment>\n        <Seperator text=\"DONE\" />\n        {this.state.todos\n          .filter(todo => todo.done)\n          .map(todo => (\n            <ToDoListItem\n              key={todo.id}\n              text={todo.text}\n              isDone={todo.done}\n              click={() => this.toggleDone(todo.id)}\n              deleteEl={() => this.deleteListItem(todo.id)}\n            />\n          ))}\n      </React.Fragment>\n    )\n  }\n\n  determineProgress() {\n    const { todos } = this.state\n    const doneTodos = todos.filter(t => t.done)\n    return doneTodos.length / todos.length\n  }\n\n  render() {\n    this.save()\n    return (\n      <Layout>\n        <StyleEl />\n        <Container>\n          <ProgressBar percentage={this.determineProgress()} />\n          <Headline>\n            <Counter num={this.counterToDo()} />\n          </Headline>\n          <section>\n            <Input onEnter={this.addToDo} />\n          </section>\n          <ListContainer>\n            <Seperator text=\"TODO\" />\n            {this.renderOpenTodos()}\n            {this.props.showDoneTodos && this.renderDoneTodos()}\n          </ListContainer>\n\n          <TextArea />\n        </Container>\n      </Layout>\n    )\n  }\n}\nexport default Home\n","import React, { Component } from 'react'\nimport ToggleButton from './ToggleButton'\n\nexport default class Config extends Component {\n  render() {\n    const { showDoneTodos, onToggle } = this.props\n\n    return (\n      <section>\n        <h2> Config </h2>\n        <ToggleButton\n          defaultText=\"Hide done todos\"\n          alternativeText=\"Show done Todos\"\n          isDefault={showDoneTodos}\n          onClick={onToggle}\n        />\n      </section>\n    )\n  }\n}\n","import { BrowserRouter as Router, Route, NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\nimport React, { Component } from 'react'\n\nimport Home from './Home'\nimport Config from './Config'\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-rows: auto 50px;\n  height: 100vh;\n  background: linear-gradient(45deg, #0d2843 155px, #2980b9);\n\n  nav {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 2px;\n  }\n\n  a {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background: #006194;\n    color: #2980b9;\n    text-decoration: none;\n    border-radius: 10px;\n    font-size: 30px;\n    font-family: 'Patrick Hand', cursive;\n    color: white;\n\n    &.selected {\n      background: #ffcc00;\n      color: #006194;\n    }\n  }\n`\n\nexport default class App extends Component {\n  state = {\n    showDoneTodos: false\n  }\n\n  toggleShowDonetodos = () => {\n    this.setState({\n      showDoneTodos: !this.state.showDoneTodos\n    })\n  }\n\n  render() {\n    return (\n      <Router>\n        <Grid>\n          <div>\n            <Route\n              exact\n              path=\"/\"\n              render={() => <Home showDoneTodos={this.state.showDoneTodos} />}\n            />\n\n            <Route\n              path=\"/config\"\n              render={() => (\n                <Config\n                  showDoneTodos={this.state.showDoneTodos}\n                  onToggle={this.toggleShowDonetodos}\n                />\n              )}\n            />\n          </div>\n          <nav>\n            <NavLink exact activeClassName=\"selected\" to=\"/\">\n              Home\n            </NavLink>\n            <NavLink activeClassName=\"selected\" to=\"/config\">\n              Config\n            </NavLink>\n          </nav>\n        </Grid>\n      </Router>\n    )\n  }\n}\n","import { createGlobalStyle } from 'styled-components'\n\nexport default createGlobalStyle`\n@import url('https://fonts.googleapis.com/css?family=Patrick+Hand');\n@import url('https://fonts.googleapis.com/css?family=Roboto');\n\nbody {\n  margin: 0;\n}\n`\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './Components/App'\nimport GlobalStyle from './Components/GlobalStyle'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n    <GlobalStyle />\n  </React.Fragment>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}